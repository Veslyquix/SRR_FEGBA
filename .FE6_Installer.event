#ifndef callHackNew 
	#define callHackNew(offset) 		"BYTE $01 $4B $9E $46 $00 $F8 $01 $E0; POIN (offset|0x1)"
#endif 


#ifdef VeslyBuildfile 
#include "TextFE6/repointedTextTable.event"
#endif 

#include "EAstdlib.event" 
#include "Definitions.event" 
#include "Extensions/Hack Installation.txt" 


#ifdef VeslyBuildfile 
ORG 0x1030000
#include "gfx/Installer.event"
MESSAGE Graphics end at currentoffset 
#include "bgm/Installer.event"
#endif 
// #define setText(textID, offset) "PUSH; ORG (TextTable+4*textID); POIN (offset); POP"

#ifndef PROC_CALL_ROUTINE_2
#define PROC_CALL_ROUTINE_2(aprRoutine)              "SHORT 0x16 0; POIN aprRoutine"
#endif 

#ifndef gCharacterData 
#define gCharacterData 0x86076D0
#endif 
#ifdef VeslyBuildfile 
    #include "Tables/TableInstaller.event" 
#else 
#define gCharacterDataFE1 0x86076D0 
#define gCharacterDataFE4 0x86076D0 
#define gCharacterDataFE5 0x86076D0 
#define gCharacterDataFE6 0x86076D0 
#define gCharacterDataFE7 0x86076D0 
#define gCharacterDataFE8 0x86076D0 
#define gCharacterDataFE10 0x86076D0 
#define gCharacterDataFE13 0x86076D0 
#define gCharacterDataFE14 0x86076D0 
#define gCharacterDataFE15 0x86076D0 
#define gCharacterDataFE16 0x86076D0 
#define gCharacterDataFE17 0x86076D0 
    ALIGN 4 
    MaxBGID:
    WORD 0 
#include "gfx/Clouds/Installer.event" 
#endif 
#include "Patches/FE6.lyn.event" 
#include "Patches/FE6_AsmHooks.lyn.event" 
#include "../ASM/Debugger/Installer.event" 

//#define PROJECT_EMBER // to use this installer on project ember 

#ifndef TextTable 
	#define TextTable 0x833530 
	#ifdef PROJECT_EMBER 
		#define TextTable 0x180A394
	#endif 
#endif 

#inctbl "FE6TR" "EventAssembler/fe6_tr.tbl"

TestTestText:
STRING "Abel" "FE6TR" ; BYTE 0

//#define JankyPalettes // Uncomment if you want to always use char palettes, even with classes randomized 

//#define NeverRandomizeMusic // comment this out if you want music randomized 
// it only knows of vanilla song IDs though 
#define USE_CHAR_CONFIRM_PAGE True 
ALIGN 4 
ReadConfigFromSRAM:
#ifdef VeslyBuildfile 
WORD True 
#else 
WORD 0 
#endif 
ALIGN 4 
CharConfirmPage:
WORD USE_CHAR_CONFIRM_PAGE 
RNTable:
#incbin "RNTable.dmp" 
ALIGN  4
C_SKILLSYS_INSTALL:
#ifdef C_SKILLSYS 
WORD 1 
#else 
WORD 0 
#endif 

ALIGN 4 
MaxItems_Link:
WORD 0 // If 0, it'll read through your item editor and count 
// until it finds an item with an ID that does not match (eg. says 0) 
MaxClasses_Link: 
WORD 0 // If 0, it'll read through your class editor and count
// until it finds a class with an ID that does not match (eg. says 0) 
ALIGN 4
BonusItemChance: 
WORD 10
VanillaPortraitsOnly:
#ifdef Reskin 
WORD 1 
#else 
WORD 0
#endif  
CasualModeFlag:
WORD 0x8C 
RandomizePrepShop:
WORD 1 // If true, randomize prep shop if player randomizes found items 
MinClassBase:
WORD 0 // If true, stats won't go lower than class bases 
RandomizeMovConBonus:
WORD 1 
OnlyThievesCanUseLockpicks:
WORD 1 
ClassBasedGrowths:
WORD 0
ChanceToDemote:
WORD 80
CombinedGrowths:
WORD 0
#define statCap 60 
maxStat:
WORD statCap 
AllEnemiesCanUseWepLocks:
#ifdef NoWepLock 
WORD 1 
#else 
WORD 0 
#endif 
// Each shop will have one of these items at random
RareItemTableSize:
WORD 17 
RareItemTable: // stat boosters / promo items 
BYTE 0x56 0x57 0x58 0x59 0x5a 0x5b 0x5c 0x5d 0x5e 0x5f 0x60 0x61 0x62 0x63 0x5f 0x60 0x63 


#define NeverChangeFromItem(id) "PUSH; ORG ItemExceptions + (id * 2); BYTE 1; POP" 
#define NeverChangeIntoItem(id) "PUSH; ORG ItemExceptions + (id * 2) + 1; BYTE 1; POP" 
#define NeverChangeItem(id) "PUSH; ORG ItemExceptions + (id * 2); BYTE 1 1; POP" // does both of the above 
#define NeverChangeItems(id1, id2) "PUSH; ORG ItemExceptions + (id1 * 2); FILL((id2-id1)*2) 0x1; POP" 

#define NeverChangeFromClass(id) "PUSH; ORG ClassExceptions + (id * 2); BYTE 1; POP" 
#define NeverChangeIntoClass(id) "PUSH; ORG ClassExceptions + (id * 2) + 1; BYTE 1; POP" 
#define NeverChangeClass(id) "PUSH; ORG ClassExceptions + (id * 2); BYTE 1 1; POP" // does both of the above 
#define NeverChangeClasses(id1, id2) "PUSH; ORG ClassExceptions + (id1 * 2); FILL((id2-id1)*2) 0x1; POP" 

#define NeverChangeChar(id) "PUSH; ORG CharExceptions + (id * 2); BYTE 1 1; POP" 
#define NeverChangeChars(id1, id2) "PUSH; ORG CharExceptions + (id1 * 2); FILL((id2-id1)*2) 0x1; POP" 

#define NeverUseBGM(id) "PUSH; ORG BGMExceptions + id; BYTE 1; POP" 
#define NeverUseBGMs(id1, id2) "PUSH; ORG BGMExceptions + id1; FILL(id2-id1) 0x1; POP" 

#define IgnoreTextID(id) "PUSH; ORG TextIDExceptionTable + (id); BYTE 1; POP" 
#define IgnoreTextIDRange(id1, id2) "PUSH; ORG TextIDExceptionTable + (id1); FILL(id2-id1) 0x1; POP" 
#define NeverPreviewChar(id) "PUSH; ORG HideCharPreviewExceptions + (id * 2); BYTE 1 1; POP" 
#define NeverPreviewChars(id1, id2) "PUSH; ORG HideCharPreviewExceptions + (id1 * 2); FILL((id2-id1)*2) 0x1; POP" 


ALIGN 4 
ItemExceptions:
FILL(256*2)
ALIGN 4 
ClassExceptions:
FILL(256*2)
ALIGN 4 
CharExceptions:
FILL(256*2) 
ALIGN 4 
BGMExceptions:
FILL(0x1000) // probably not more than this many tracks 
ALIGN 4 
TextIDExceptionTable: 
FILL(0x2000) // max id 0x2000
ALIGN 4 
HideCharPreviewExceptions:
FILL(256*2) 

#ifdef VeslyBuildfile
NeverPreviewChar(0x7) // Cutscene duplicate without supports 
NeverPreviewChar(0xC) // Cutscene duplicate without supports 
NeverPreviewChar(0x13) // 
NeverPreviewChar(0x24) // 
NeverPreviewChar(0x29) // 
NeverPreviewChar(0x2D) // 
NeverPreviewChar(0x2F) // 
NeverPreviewChar(0x30) // 
NeverPreviewChar(0x33) // enemy (Galle) 
NeverPreviewChar(0x39) // 
NeverPreviewChar(0x3E) // 
NeverPreviewChar(0x41) // 
#endif 
ALIGN 4 
MaxCharPreviewID: 
WORD 0x42 

#ifdef VeslyBuildfile
NeverUseBGMs(0x4B, 0x3E6)
#endif 
 
IgnoreTextID(0)
// Class descs 
IgnoreTextIDRange(0x569, 0x591) 
// stat screen descs 
IgnoreTextIDRange(0x592, 0x5AC) 
// Item descs 
IgnoreTextIDRange(0x5AD, 0x62C)
// misc, item descs 
IgnoreTextIDRange(0x62D, 0x6F2)
// Misc rank
IgnoreTextIDRange(0x716, 0x727)
// item names 
IgnoreTextIDRange(0x727, 0x75B) 
// fire 
IgnoreTextIDRange(0x75D, 0x760) 
IgnoreTextIDRange(0x762, 0x7A8) 
// classes 
IgnoreTextIDRange(0x7A9, 0x7EB) 
//names here 

// options 
IgnoreTextIDRange(0x8B6, 0x8EB)
// bwl  
IgnoreTextIDRange(0x9C6, 0x9C8) 
IgnoreTextIDRange(0xB94, 0xBA1) 
IgnoreTextIDRange(0xC0F, 0xC48) 
// wep level 
IgnoreTextIDRange(0xC6F, 0xC7A) 


NeverChangeIntoClass(3)
NeverChangeIntoClass(5)
NeverChangeIntoClass(7)
NeverChangeIntoClass(9)
NeverChangeIntoClass(0xD)
NeverChangeIntoClass(0xF)
NeverChangeIntoClass(0x11)
NeverChangeIntoClass(0x13)
NeverChangeIntoClass(0x15)
NeverChangeIntoClass(0x1B)
NeverChangeIntoClass(0x1D)
NeverChangeIntoClass(0x1F)
NeverChangeIntoClass(0x21)
NeverChangeIntoClass(0x23)
NeverChangeIntoClass(0x27)
NeverChangeIntoClass(0x29)
NeverChangeIntoClass(0x2D)
NeverChangeIntoClass(0x2F)
NeverChangeIntoClass(0x35)

NeverChangeFromItem(0x9) // Durandal 
NeverChangeFromItem(0xF) // Binding blade 
NeverChangeFromItem(0x17) // Maltet // in ch 21 Yoder comes with this or Mulagir but can't wield them anyway 
NeverChangeFromItem(0x21) // Armads
NeverChangeFromItem(0x2F) // Mulagir
NeverChangeFromItem(0x3a) // Forblaze
NeverChangeFromItem(0x3E) // Aureola
NeverChangeFromItem(0x42) // Apocalypse 
//NeverChangeFromItem(0x71) // Eckesachs  
NeverChangeFromItem(0x77) // Saint's staff 
NeverChangeIntoItem(0x4F) // useless staff "Makes closed areas visible." 
NeverChangeIntoItem(0x53) // glitchy animation & unbreakable dragonstone with high stats 
// manaketes will always get the divinestone I guess 
NeverChangeIntoItem(0x55) // crashes animations 
NeverChangeIntoItem(0x70) // crashes animations 

NeverChangeChar(0xE1) // arena enemy randomized breaks things 

#ifdef VeslyBuildfile
	#define SetName(id) "{ addr: ; SetText(id, addr) ; }"
#else 
	#define SetName(id) "ALIGN 32"
#endif 




ALIGN 32
TalkText: 
STRING "Talk" "FE6TR" ; BYTE 0
TrvText: 
STRING "Trv" "FE6TR" ; BYTE 0

MovText:
BYTE $64 $94 $DD $0B $00 $00 $00 $00 
HpText:
BYTE $C6 $9A $EB $05 $00 $00 $00 $00 
MinusText: 
BYTE $FD $7B $71 $91 $5E $00 $00 $00 $00 // _ 
//BYTE $D6 $E9 $05 $00 $00 $00 $00 $00 // - 
PlusText:
BYTE $5D $D3 $BD $00 $00 $00 $00 $00 $00 $00 $00 $00
DashText:
BYTE $D6 $E9 $05 $00 $00 $00 $00 $00 $00 $00 $00 $00
PercentText:
BYTE $FD $7B $C1 $5C $2F $00 $00 $00 $00 $00 $00 $00
ConfigText: 
BYTE $82 $A4 $82 $E9 $82 $E8 $82 $DD $82 $E0 $82 $DE $00 $00
RandomizerDescText:
BYTE $FD $3D $A3 $48 $EC $8A $9F $8F $8F $CF $11 $84 $5A $EF $FE $FB $73 $7B $01 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00


#define SetText(textID, offset) "PUSH; ORG (TextTable+4*textID); POIN (offset|0x80000000); POP"
#define SetTextWithHuffman(textID, offset) "PUSH; ORG (TextTable+4*textID); POIN (offset); POP"
ALIGN 4 
//SetTextWithHuffman(0xB6E, VarianceText) // no longer necessary 
SetTextWithHuffman(0xB80, MovText)
SetTextWithHuffman(0xB81, HpText)
SetTextWithHuffman(0xB82, MinusText)



ALIGN 4 
VramDest_DebugFont: 
WORD 0xd800 // in glowy or 0x3000 ? // 0x4800 

PUSH 

#ifdef USE_CHAR_CONFIRM_PAGE 
// Kill BWL DeployAmt and SquaresMoved 
ORG $84BEC // PidStatsAddDeployAmt
SHORT $4770 
// ORG $84C30 //PidStatsAddSquaresMoved
// SHORT $4770 


ORG $84b30 // 84AEC PidStatsRecordDefeatInfo
SHORT $e01e // b End 
SHORT $e01e // b End 
SHORT $e01e // b End 

#endif 

// Melee and magic fix fe6 
ORG 0x18188
BYTE $00 $B5 $FE $F7 $E5 $FB $FE $F7 $FF $FF $02 $21 $08 $40 $40 $08 $02 $BC $08 $47

// make some enemies in first ch promoted for testing 
//ORG $679C91 
//BYTE $B 
//ORG $679CA1 
//BYTE $B 
//ORG $679CB1 
//BYTE $B 
//ORG $679CC1 
//BYTE $B 

ORG $31740 //$37D84
jumpToHack(MaybeChargeAtPlayer)

#ifdef VeslyBuildfile
ORG $9B54C
jumpToHack(TitleScreen_FE6) 

ORG $881CC
jumpToHack(SaveScreen_FE6) 
#endif 

// roy can seize? 
//Character Editor  (UnitFE6Form) @01 Roy2024-04-04 8:24:40 PM
ORG $6076D0
BYTE  $EC $07 $B9 $04 $01 $01 $02 $00 $00 $01 $01 $01 $00 $02 $02 $03 $00 $00 $07 $00 $00 $00 $00 $00 $00 $00 $00 $00 $50 $28 $32 $28 $19 $1E $3C $01 $01 $00 $00 $1F $00 $20 $01 $00 $98 $20 $66 $08;

//Character Editor  (UnitFE6Form) @66 Idunn2024-05-14 9:31:50 AM
ORG $6089C0
BYTE  $4D $08 $0E $05 $66 $3C $BE $00 $00 $00 $00 $14 $26 $04 $03 $0B $02 $00 $12 $00 $00 $00 $00 $00 $00 $00 $00 $00 $64 $64 $64 $64 $64 $64 $64 $00 $00 $00 $00 $00 $00 $41 $00 $01 $00 $00 $00 $00;
// make Idunn a promoted unit with 100% growths 

// 2529C some promo something 

ORG $6D0E6 // from 6D0E4
SHORT $46C0 
callHackNew(RoyPromoHook)
SHORT $46C0 
ORG $675FCC
//BYTE $02 $00 $00 $00 $01 $00 $00 $00
//ORG $6D0F0 
//SHORT $2100 // No equipped item during Roy's forced promotion 

ORG $1F524 
jumpToHack(FE6_SeizeCantoFix) 

ORG $5C554 
callHackNew(FE6_RandBattleMusicHook)

ORG $4EC4 
SHORT $46C0 $46C0 // don't erase bg when setting up debug font 

ORG $17BEC
  jumpToHack(CasualMode)
  
ORG $28f72 // in 28ef0
// SHORT $22C0 $4311 // default game/text speed fast 
SHORT $21C0 $21C0 // default game/text speed fast 

#ifndef JankyPalettes
ORG $4a4A0 
jumpToHack(MaybeUseGenericPalette_FE6)
//ORG $4a4b0
//SHORT $2000 // always use generic palette (by Vesly) 
#endif 

// in 8019600 BuildBestMovementScript 
// Fix REDA / MOVE from crashing on impassible terrain 
// by 7743 - ported to fe6 by Vesly 
//ORG 0x01A77E; // fe8 version 
ORG 0x19738 // fe6 
// looks like code is the same except it uses r6 instead of r5 for something (so we do byte 0x2E instead of 0x2D below) 
// branch is also 3 lines later, so 0xDA2C 
BYTE 0xFF 0x2E 0x2C 0xDA 0x02 0x99 0x08 0x70 0x04 0x9B 0x02 0x93
SHORT $4667 $46c0 $46c0 // I think this is right but I'm not 100% convinced, oh well 

ORG 0x60C759 
BYTE 3 // Peak brigand movement cost from 4 to 3 because of some bug in the following: 
// 802e914 AiDecide_NextUnit unit 0x85 getting stuck
// 38f8 MapFloodCore


//in 83193ec T gStatScreenPersonalInfoLabelsInfo
//ORG $3193EC // 08677de8 
//WORD 0 0 0 0
ORG $31943c // Don't draw "mov" 
BYTE $90 $31 $00 $02 $0A $35 $00 $02 $03 $00 $00 $00 $58 $7E $67 $08
ORG $31948c; WORD 0 0 0 0
// data at 31943c for drawing mov is usually "68 31 00 02 8A 32 00 02 03 00 00 00 18 7E 67 08" 
//ORG $8171F8 // start of stat screen label names - "HP" 
ORG $817220 
BYTE $82 $e4 $82 $e6 0 0 0 0 // "Skl" 
ORG $817244 
BYTE $82 $d6 $82 $e4 0 0 // "Lck" 
ORG $81720E 
STRING "Pow" "FE6TR" ; BYTE 0 // Inline, so 3 characters! 
ORG $817216 
STRING "Pow" "FE6TR" ; BYTE 0

// in 806ED34 
ORG $6EDB2 
FILL($6eeF0 - $6EDB2) // nop out the vanilla draw bar stuff 

ORG $6eec4 // our new version 
callHackNew(DrawBarsOrGrowths) 
SHORT $46c0 

// in 80700A4
ORG $70200
FILL($70220 - $70200)

ORG $70200
SHORT $1C28
SHORT $46c0 
callHackNew(StatScreenSelectLoop)

// merlinus show anim 
ORG $49ACE
BYTE $ff
ORG $49AD8
BYTE $FF 

ORG $8874C; SHORT $46C0 // hard selectable from new game by 7743 


// AiGetConsumableAttemptId
ORG $34a9A; SHORT $46C0 // any ai can use lockpick from 8034a60

// fe6 hard mode store w/ translation 
// 807ad6c calls 807a84c calls 807a59c calls 807a268 at 7a4f0 calls 79424 which sets shop existing or not 
ORG $7943a 
BYTE $20 // never hard mode for prep ? 


// Antihuffman 
//ORG 0x384c;  BYTE $03 $B5 $02 $B0 $C2 $0F $00 $2A $01 $D0 $05 $4A $97 $46 $03 $4A $12 $68 $9A $F0 $5B $FB $01 $BC $00 $47 $00 $00 $80 $37 $00 $03 $60 $C4 $2D $08
ORG $2dc460; BYTE $80 $23 $1B $06 $C0 $1A $02 $78 $0A $70 $01 $31 $01 $30 $00 $2A $F9 $D1 $01 $4A $97 $46 $00 $00 $62 $38 $00 $08

// in A200B8 fe8 / CE3C54 fe7 / 
//a20164
//8CE4930
ORG $68A08C//$68C30C //68A09C
PROC_CALL_ROUTINE_2(FE6_StartDifficultySelection)

ORG $5C7650 
POIN NewChMenu

ORG 0x1514
callHackNew(RandColoursHook)
SHORT 0x46C0

ORG $2EF4C 
callHackNew(MakeStolenItemDroppable_FE6)

ORG $22EAC
BYTE 30 // Support range 

// PutUnitSpriteIconsOam fe6/7/8 8022378 8025B54 80275E8
ORG $2257C // ORG $25E04 FE7 // jumpToHack
jumpToHack(DisplayStealOrDropIcon_FE6)

ORG $a564 // in 7854 // fe7 8008E34 fe6 800a4f4
callHackNew(HookLoadFace_FE6)

// 8010f5c EvtCmd_WmPutFace
ORG $1102C
callHackNew(HookWMStartFace_FE6)


// struct FaceProc+0x40 faceID is a u8 in fe6, but u16 in fe8 
// fe6: StartFaceFadeIn 8d04 called by TalkLoadFace a4f4 makes portrait only 1 byte for palette 
// https://github.com/FireEmblemUniverse/fireemblem6j/blob/b158d46dfc4d6590d783b0072fed90cf0227edf7/include/face.h#L46
// [20240d0]!!?
ORG $853C
SHORT $800A // strh r2, [r1] @ store faceID as short, not byte 
ORG $8d12 
SHORT $880A // ldrh r2, [r1] 
ORG $8d7a 
SHORT $880A // ldrh r2, [r1] 

// TEMPORARY (hopefully...)
// kill UpdateFaceTalk (called from Face_OnIdle) 
// so no mouth frames appear for portraits > 0x100 
// ORG $82B8
// callHackNew(DisableMouthFrames_FE6) 
// SHORT $46c0 

// make supports appear in febuilder 
ORG $6afDE 
SHORT $e014 // b 0x806b00A 
POIN 0x666cf8 
ORG $6B00A 
SHORT $1c0d // mov r5, r1 
SHORT $3510 // add r5, #0x10 
SHORT $B0A9 // sub sp, #0xA4 
SHORT $e7e8 // b 0x806AFE4 

ORG $184F0
jumpToHack(GetUnitPortraitId_FE7)  // same code 
// 80192F4	GetUnitChibiId // fe7 8018BF4 fe6 8018500
ORG $18500 
jumpToHack(GetUnitMiniPortraitId_FE7) // same code 


ORG $5d9ac
callHackNew(GetBattleLevelUpPortraitId_FE6)

// at 74B98 from 74a28 - fe6 8067E84
ORG $67fec 
callHackNew(GetMapLevelUpPortraitId_FE6)

ORG $60BBA7 // item table poison bow 
BYTE 1 // make it actually poison lol 

POP 

ALIGN 4 
ReplacePortraitTable:
FILL(256) 

#define ReplacePortraitEntry(id, newID) "PUSH; ORG ReplacePortraitTable + id; BYTE newID; POP" 

#ifdef VeslyBuildfile
ReplacePortraitEntry(0xBF, 0x58) // Hector  
#endif 

ALIGN 4
DIS_matrixTable:
#incbin "matrixTable.bin"
ALIGN 4 
NeverRandomizeColours:
WORD 0
PortraitColoursPastThisAreNotSkin:
WORD 5 // vanilla portraits use the first few colours for skin 
IncludeMonstersWithoutWEXP:
WORD 1 

ALIGN 4 
SkillExceptions:
FILL 256*2
DragonClasses: 
BYTE 0x38 0x39 0x4a 0x3b 0x3C 
#ifdef VeslyBuildfile 
BYTE Fellbeast BlackDragon 
#endif 
BYTE 0 // Terminator 
earlyPossibleFliers: 
BYTE Roy Marcus Allen Lance Wolt Bors Merlinus Ellen Dieck Wade Lot Thany 0 
earlyPossibleHealers: 
BYTE Roy Marcus Allen Lance Wolt Bors Merlinus Ellen Dieck Wade Lot Thany 0 
earlyPossibleThieves: 
BYTE Roy Marcus Allen Lance Wolt Bors Merlinus Ellen Dieck Wade Lot Thany Chad 0 

ALIGN 4 
NumberOfSkills:
WORD 0xE3
DisplayRandomSkillsOption:
WORD 0
ALIGN 4 
VanillaSkill:
FILL 256 
ALIGN 4 
AlwaysSkillTable:
FILL 256 

ALIGN 4 
NewChMenu: 
BYTE  $DC $74 $81 $08 $00 $00 $54 $06 $00 $00 $00 $00 $6D $1E $04 $08 $00 $00 $00 $00 $A5 $EA $01 $08 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $20 $7A $81 $08 $00 $00 $55 $06 $00 $00 $00 $00 $6D $1E $04 $08 $00 $00 $00 $00 $D5 $EA $01 $08 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $2E $7A $81 $08 $00 $00 $56 $06 $00 $00 $00 $00 $6D $1E $04 $08 $00 $00 $00 $00 $C1 $EA $01 $08 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $CC $7A $81 $08 $00 $00 $57 $06 $00 $00 $00 $00 $55 $EA $01 $08 $00 $00 $00 $00 $6D $EA $01 $08 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 
// Config Menu 
POIN ConfigText; BYTE $00 $00; SHORT 0xb8a; BYTE $00 $00 $00 $00 $6D $1E $04 $08 $00 $00 $00 $00; POIN MenuStartConfigMenu; BYTE $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00;
// End 
BYTE $08 $75 $81 $08 $00 $00 $58 $06 $00 $00 $00 $00 $6D $1E $04 $08 $00 $00 $00 $00 $91 $EA $01 $08 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00 $00;
FILL(36) 


ALIGN 4 
CasualMode: 
BYTE $10 $B4 $0C $1C $00 $F0 $13 $F8 $00 $28 $01 $D1 $05 $23 $00 $E0 $09 $23 $E0 $68 $05 $21 $C9 $43 $08 $40 $19 $1C $08 $43 $E0 $60 $20 $1C $06 $4B $00 $F0 $02 $F8 $10 $BC $05 $4B $18 $47 $00 $B5 $8C $20 $04 $4B $FF $F7 $FA $FF $00 $BD $00 $00 $61 $2C $02 $08 $FF $7B $01 $08 $5D $BA $06 $08

ALIGN 4 
SkillSysInstalled:
#ifdef SKILLSYS_INSTALLED
WORD 1 
#endif 
WORD 0 
StrMagInstalled:
#ifdef STRMAG_INSTALLED
WORD 1 
#endif 
WORD 0 

#ifndef SKILLSYS_INSTALLED 
ALIGN 4 
prConGetter: 
prAidGetter: 
prMovGetter: 
Growth_Getter_Table:
Skill_Getter:
Get_Hp_Growth: 
Get_Str_Growth: 
Get_Skl_Growth: 
Get_Spd_Growth: 
Get_Luk_Growth: 
Get_Def_Growth: 
Get_Res_Growth:
prMaxHPGetter:
WORD 0 
#endif 
#ifndef STRMAG_INSTALLED 
MagClassTable:
MagCharTable:
prMagGetter: 
Get_Mag_Growth:
WORD 0 
#endif 
AlwaysRemoveGlowy: // stat screen fe8
WORD 0 
DefaultConfigToVanilla:
WORD 0
MaxWeaponHitrate:
WORD 250 // make this 125 if you like 
#ifndef IconOrrValue 
#define IconOrrValue 0x100
#endif  
ALIGN 4
IconOrr:
WORD IconOrrValue
SRR_TotalOptions:
WORD 28

// if you don't have a max hp getter, these are used 
PlayerMaxHP:
WORD 60 
EnemyBossMaxHP:
WORD 80
EnemyMaxHP:
WORD 60  
ALIGN 4 
UseAutoGetters:
#ifdef DoNotUseAutoGetters 
WORD 0 
#else 
WORD 1 
#endif 

ALIGN 4 
NeverRandomizeBGM:
#ifdef NeverRandomizeMusic
WORD 1
#else 
WORD 0
#endif   
// #inctbl "FE6TR" "EventAssembler/fe6_tr.tbl"
// #inctbl "FE8TR" "EventAssembler/fe8_tr.tbl"

// #define txt(string2) STRING string2 "FE8TR"; BYTE 0 0; 
#define txt(string2) STRING string2 "FE6TR"; BYTE 0 0; // fe6 version 

#include "SRR_Menu.event" 
 // r0=0x6016800
ALIGN 4 
RandValues:
WORD 0x203D974 // Bandit unitID + 0x45 BWL data
RandBitflags:
WORD 0x203D978 
MaxItems:
WORD 0x203D97C
MaxClasses:
WORD 0x203D97D
RecruitValues:
WORD 0x203D97E
AlwaysSkill:
WORD 0x203D97F 
GrowthValues:
WORD 0x203D980 
TagValues:
WORD 0x203D904 // Echidna 2 
ClassTags: 
WORD 0x203D908 
EnemyClassTags:
WORD 0x203D90C

ALIGN 32
NameStrings: 
FILL(32*256)
ORG NameStrings
ALIGN 32 ; SetName(0x07EC); STRING "Roy" "FE6TR" ;
ALIGN 32 ; SetName(0x07ED); STRING "Clarine" "FE6TR" ;
ALIGN 32 ; SetName(0x07EE); STRING "Fae" "FE6TR" ;
ALIGN 32 ; SetName(0x07EF); STRING "Sin" "FE6TR" ;
ALIGN 32 ; SetName(0x07F0); STRING "Sue" "FE6TR" ;
ALIGN 32 ; SetName(0x07F1); STRING "Dayan" "FE6TR" ;
ALIGN 32 ; SetName(0x07F2); STRING "Dayan" "FE6TR" ;
ALIGN 32 ; SetName(0x07F3); STRING "Barthe" "FE6TR" ;
ALIGN 32 ; SetName(0x07F4); STRING "Bors" "FE6TR" ;
ALIGN 32 ; SetName(0x07F5); STRING "Gwendolyn" "FE6TR" ;
ALIGN 32 ; SetName(0x07F6); STRING "Douglas" "FE6TR" ;
ALIGN 32 ; SetName(0x07F7); STRING "Douglas" "FE6TR" ;
ALIGN 32 ; SetName(0x07F8); STRING "Wolt" "FE6TR" ;
ALIGN 32 ; SetName(0x07F9); STRING "Dorothy " "FE6TR" ;
ALIGN 32 ; SetName(0x07FA); STRING "Klein" "FE6TR" ;
ALIGN 32 ; SetName(0x07FB); STRING "Saul" "FE6TR" ;
ALIGN 32 ; SetName(0x07FC); STRING "Elen" "FE6TR" ;
ALIGN 32 ; SetName(0x07FD); STRING "Yoder" "FE6TR" ;
ALIGN 32 ; SetName(0x07FE); STRING "Yoder" "FE6TR" ;
ALIGN 32 ; SetName(0x07FF); STRING "Chad" "FE6TR" ;
ALIGN 32 ; SetName(0x0800); STRING "Karel" "FE6TR" ;
ALIGN 32 ; SetName(0x0801); STRING "Fir" "FE6TR" ;
ALIGN 32 ; SetName(0x0802); STRING "Rutger" "FE6TR" ;
ALIGN 32 ; SetName(0x0803); STRING "Dieck" "FE6TR" ;
ALIGN 32 ; SetName(0x0804); STRING "Ogier" "FE6TR" ;
ALIGN 32 ; SetName(0x0805); STRING "Garrett" "FE6TR" ;
ALIGN 32 ; SetName(0x0806); STRING "Alen" "FE6TR" ;
ALIGN 32 ; SetName(0x0807); STRING "Lance" "FE6TR" ;
ALIGN 32 ; SetName(0x0808); STRING "Perceval" "FE6TR" ;
ALIGN 32 ; SetName(0x0809); STRING "Igrene" "FE6TR" ;
ALIGN 32 ; SetName(0x080A); STRING "Marcus" "FE6TR" ;
ALIGN 32 ; SetName(0x080B); STRING "Astolfo" "FE6TR" ;
ALIGN 32 ; SetName(0x080C); STRING "Ward" "FE6TR" ;
ALIGN 32 ; SetName(0x080D); STRING "Lot" "FE6TR" ;
ALIGN 32 ; SetName(0x080E); STRING "Bartre" "FE6TR" ;
ALIGN 32 ; SetName(0x080F); STRING "Bartre" "FE6TR" ;
ALIGN 32 ; SetName(0x0810); STRING "Lugh" "FE6TR" ;
ALIGN 32 ; SetName(0x0811); STRING "Lilina" "FE6TR" ;
ALIGN 32 ; SetName(0x0812); STRING "Hugh" "FE6TR" ;
ALIGN 32 ; SetName(0x0813); STRING "Niime" "FE6TR" ;
ALIGN 32 ; SetName(0x0814); STRING "Niime" "FE6TR" ;
ALIGN 32 ; SetName(0x0815); STRING "Raigh" "FE6TR" ;
ALIGN 32 ; SetName(0x0816); STRING "Larum" "FE6TR" ;
ALIGN 32 ; SetName(0x0817); STRING "Juno" "FE6TR" ;
ALIGN 32 ; SetName(0x0818); STRING "Juno" "FE6TR" ;
ALIGN 32 ; SetName(0x0819); STRING "Thea" "FE6TR" ;
ALIGN 32 ; SetName(0x081A); STRING "Thea" "FE6TR" ;
ALIGN 32 ; SetName(0x081B); STRING "Thea" "FE6TR" ;
ALIGN 32 ; SetName(0x081C); STRING "Shanna" "FE6TR" ;
ALIGN 32 ; SetName(0x081D); STRING "Zeiss" "FE6TR" ;
ALIGN 32 ; SetName(0x081E); STRING "Galle" "FE6TR" ;
ALIGN 32 ; SetName(0x081F); STRING "Elffin" "FE6TR" ;
ALIGN 32 ; SetName(0x0820); STRING "Cath" "FE6TR" ;
ALIGN 32 ; SetName(0x0821); STRING "Sophia" "FE6TR" ;
ALIGN 32 ; SetName(0x0822); STRING "Melady" "FE6TR" ;
ALIGN 32 ; SetName(0x0823); STRING "Gonzalez" "FE6TR" ;
ALIGN 32 ; SetName(0x0824); STRING "Gonzalez" "FE6TR" ;
ALIGN 32 ; SetName(0x0825); STRING "Noah" "FE6TR" ;
ALIGN 32 ; SetName(0x0826); STRING "Trec" "FE6TR" ;
ALIGN 32 ; SetName(0x0827); STRING "Zelot" "FE6TR" ;
ALIGN 32 ; SetName(0x0828); STRING "Echidna" "FE6TR" ;
ALIGN 32 ; SetName(0x0829); STRING "Echidna" "FE6TR" ;
ALIGN 32 ; SetName(0x082A); STRING "Cecilia" "FE6TR" ;
ALIGN 32 ; SetName(0x082B); STRING "Geese" "FE6TR" ;
ALIGN 32 ; SetName(0x082C); STRING "Geese" "FE6TR" ;
ALIGN 32 ; SetName(0x082D); STRING "Merlinus" "FE6TR" ;
ALIGN 32 ; SetName(0x082E); STRING "Eliwood" "FE6TR" ;
ALIGN 32 ; SetName(0x082F); STRING "Guinivere" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0831); STRING "Damas" "FE6TR" ;
ALIGN 32 ; SetName(0x0832); STRING "Ruud" "FE6TR" ;
ALIGN 32 ; SetName(0x0833); STRING "Slater" "FE6TR" ;
ALIGN 32 ; SetName(0x0834); STRING "Erik" "FE6TR" ;
ALIGN 32 ; SetName(0x0835); STRING "Dory" "FE6TR" ;
ALIGN 32 ; SetName(0x0836); STRING "Wagner" "FE6TR" ;
ALIGN 32 ; SetName(0x0837); STRING "Debias" "FE6TR" ;
ALIGN 32 ; SetName(0x0838); STRING "Legance" "FE6TR" ;
ALIGN 32 ; SetName(0x0839); STRING "Scott" "FE6TR" ;
ALIGN 32 ; SetName(0x083A); STRING "Nord" "FE6TR" ;
ALIGN 32 ; SetName(0x083B); STRING "William" "FE6TR" ;
ALIGN 32 ; SetName(0x083C); STRING "Flaer" "FE6TR" ;
ALIGN 32 ; SetName(0x083D); STRING "Orlo" "FE6TR" ;
ALIGN 32 ; SetName(0x083E); STRING "Roberts" "FE6TR" ;
ALIGN 32 ; SetName(0x083F); STRING "Ein" "FE6TR" ;
ALIGN 32 ; SetName(0x0840); STRING "Narcian" "FE6TR" ;
ALIGN 32 ; SetName(0x0841); STRING "Randy" "FE6TR" ;
ALIGN 32 ; SetName(0x0842); STRING "Rose" "FE6TR" ;
ALIGN 32 ; SetName(0x0843); STRING "Maggie" "FE6TR" ;
ALIGN 32 ; SetName(0x0844); STRING "Raith" "FE6TR" ;
ALIGN 32 ; SetName(0x0845); STRING "Arcardo" "FE6TR" ;
ALIGN 32 ; SetName(0x0846); STRING "Martel" "FE6TR" ;
ALIGN 32 ; SetName(0x0847); STRING "Sigune" "FE6TR" ;
ALIGN 32 ; SetName(0x0848); STRING "Roartz" "FE6TR" ;
ALIGN 32 ; SetName(0x0849); STRING "Murdock" "FE6TR" ;
ALIGN 32 ; SetName(0x084A); STRING "Brunnya" "FE6TR" ;
ALIGN 32 ; SetName(0x084B); STRING "Zephiel" "FE6TR" ;
ALIGN 32 ; SetName(0x084C); STRING "Idunn" "FE6TR" ;
ALIGN 32 ; SetName(0x084D); STRING "Idunn" "FE6TR" ;
ALIGN 32 ; SetName(0x084E); STRING "Jahn" "FE6TR" ;
ALIGN 32 ; SetName(0x084F); STRING "Zinque" "FE6TR" ;
ALIGN 32 ; SetName(0x0850); STRING "Monke" "FE6TR" ;
ALIGN 32 ; SetName(0x0851); STRING "Kel" "FE6TR" ;
ALIGN 32 ; SetName(0x0852); STRING "Brigand" "FE6TR" ;
ALIGN 32 ; SetName(0x0853); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0854); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0855); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0856); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0857); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0858); STRING "Laus" "FE6TR" ;
ALIGN 32 ; SetName(0x0859); STRING "Pirate" "FE6TR" ;
ALIGN 32 ; SetName(0x085A); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x085B); STRING "Thria" "FE6TR" ;
ALIGN 32 ; SetName(0x085C); STRING "Rebel" "FE6TR" ;
ALIGN 32 ; SetName(0x085D); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x085E); STRING "Rebel" "FE6TR" ;
ALIGN 32 ; SetName(0x085F); STRING "Officials" "FE6TR" ;
ALIGN 32 ; SetName(0x0860); STRING "Thief" "FE6TR" ;
ALIGN 32 ; SetName(0x0861); STRING "West Isles" "FE6TR" ;
ALIGN 32 ; SetName(0x0862); STRING "Pirate" "FE6TR" ;
ALIGN 32 ; SetName(0x0863); STRING "Armagh" "FE6TR" ;
ALIGN 32 ; SetName(0x0864); STRING "Robber" "FE6TR" ;
ALIGN 32 ; SetName(0x0865); STRING "Resistance" "FE6TR" ;
ALIGN 32 ; SetName(0x0866); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x0867); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0868); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0869); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x086A); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x086B); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x086C); STRING "West Isles" "FE6TR" ;
ALIGN 32 ; SetName(0x086D); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x086E); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x086F); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0870); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0871); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x0872); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0873); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x0874); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0875); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0876); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x0877); STRING "Thief" "FE6TR" ;
ALIGN 32 ; SetName(0x0878); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0879); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x087A); STRING "Pirate" "FE6TR" ;
ALIGN 32 ; SetName(0x087A); STRING "Pirate" "FE6TR" ;
ALIGN 32 ; SetName(0x087B); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x087C); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x087D); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x087E); STRING "Brigand" "FE6TR" ;
ALIGN 32 ; SetName(0x087F); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x0880); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x0881); STRING "Soldier" "FE6TR" ;
ALIGN 32 ; SetName(0x0882); STRING "Ilia" "FE6TR" ;
ALIGN 32 ; SetName(0x0883); STRING "Citizen" "FE6TR" ;
ALIGN 32 ; SetName(0x0884); STRING "Thief" "FE6TR" ;
ALIGN 32 ; SetName(0x0885); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0886); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0887); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0888); STRING "Thief" "FE6TR" ;
ALIGN 32 ; SetName(0x0889); STRING "Soldier" "FE6TR" ;
ALIGN 32 ; SetName(0x088A); STRING "Citizen" "FE6TR" ;
ALIGN 32 ; SetName(0x088B); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x088C); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x088D); STRING "Sacae" "FE6TR" ;
ALIGN 32 ; SetName(0x088E); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x088F); STRING "Djute" "FE6TR" ;
ALIGN 32 ; SetName(0x0890); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0891); STRING "Sacae" "FE6TR" ;
ALIGN 32 ; SetName(0x0892); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0893); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x0894); STRING "Sacae" "FE6TR" ;
ALIGN 32 ; SetName(0x0895); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0896); STRING "Manakete" "FE6TR" ;
ALIGN 32 ; SetName(0x0897); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0898); STRING "Dragon" "FE6TR" ;
ALIGN 32 ; SetName(0x0899); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0899); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x089A); STRING "Henning" "FE6TR" ;
ALIGN 32 ; SetName(0x089B); STRING "Scollan" "FE6TR" ;
ALIGN 32 ; SetName(0x08A6); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x089C); STRING "Guerrero" "FE6TR" ;
ALIGN 32 ; SetName(0x089D); STRING "Oates" "FE6TR" ;
ALIGN 32 ; SetName(0x089E); STRING "Tick" "FE6TR" ;
ALIGN 32 ; SetName(0x08A7); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x08A8); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x08A9); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x089F); STRING "Thoril" "FE6TR" ;
ALIGN 32 ; SetName(0x08A0); STRING "Brakul" "FE6TR" ;
ALIGN 32 ; SetName(0x08A1); STRING "Kudoka" "FE6TR" ;
ALIGN 32 ; SetName(0x08A2); STRING "Marral" "FE6TR" ;
ALIGN 32 ; SetName(0x08A3); STRING "Kabul" "FE6TR" ;
ALIGN 32 ; SetName(0x08A4); STRING "Chan" "FE6TR" ;
ALIGN 32 ; SetName(0x08A5); STRING "Peres" "FE6TR" ;
ALIGN 32 ; SetName(0x08AA); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x08AB); STRING "Windham" "FE6TR" ;
ALIGN 32 ; SetName(0x0893); STRING "Etruria" "FE6TR" ;
ALIGN 32 ; SetName(0x08AE); STRING "Morgan" "FE6TR" ;
ALIGN 32 ; SetName(0x085C); STRING "Rebel" "FE6TR" ;
ALIGN 32 ; SetName(0x0885); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0885); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x0885); STRING "Bern" "FE6TR" ;
ALIGN 32 ; SetName(0x088A); STRING "Citizen" "FE6TR" ;
ALIGN 32 ; SetName(0x0883); STRING "Citizen" "FE6TR" ;
ALIGN 32 ; SetName(0x08AF); STRING "Hector" "FE6TR" ;
ALIGN 32 ; SetName(0x08B0); STRING "Bors" "FE6TR" ;
ALIGN 32 ; SetName(0x08B1); STRING "Soldier" "FE6TR" ;
ALIGN 32 ; SetName(0x08B2); STRING "Soldier" "FE6TR" ;
ALIGN 32 ; SetName(0x07A8); STRING "Soldiers" "FE6TR" ;
ALIGN 32 ; SetName(0x0889); STRING "Soldier" "FE6TR" ;
ALIGN 32 ; SetName(0x07A8); STRING "Soldiers" "FE6TR" ;
ALIGN 32 ; SetName(0x07A8); STRING "Soldiers" "FE6TR" ;
ALIGN 32 ; SetName(0x07A8); STRING "Soldiers" "FE6TR" ;
ALIGN 32 ; SetName(0x08B3); STRING "Archer" "FE6TR" ;
ALIGN 32 ; SetName(0x08B4); STRING "Peg Kn" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08B5); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x0830); STRING "Bandit" "FE6TR" ;
ALIGN 32 ; SetName(0x08AC); STRING "Enemy" "FE6TR" ;
ALIGN 32 ; SetName(0x08AD); STRING "Broken Wall" "FE6TR" ;
ORG NameStrings + (32*256) 


ALIGN 32
WORD 0 0 0 0 0 0 0 0

